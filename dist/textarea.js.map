{"version":3,"file":"textarea.js","sources":["../src/Textarea/InputWrapper.tsx","../src/Textarea/InputTab.tsx","../src/FormattedText.tsx","../src/Textarea/PreviewTab.tsx","../src/Textarea/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface WrapperProps {\n  style?: { [propName: string]: string };\n  children: React.ReactNode;\n}\n\nconst wrapper = ({ children, style = {} }: WrapperProps) => (\n  <div\n    style={{\n      border: '1px solid #ddd',\n      borderTop: '0px',\n      borderRadius: '5px',\n      borderTopLeftRadius: '0px',\n      borderTopRightRadius: '0px',\n      padding: '10px',\n      backgroundColor: '#fff',\n      textAlign: 'left',\n      ...style,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default React.memo(wrapper);\n","import * as React from 'react';\nimport { Input, InputProps } from 'reactstrap';\nimport InputWrapper from './InputWrapper';\n\nexport interface InputMdProps extends InputProps {\n  allowFilteredHtml: boolean | undefined;\n}\n\nconst InputTabMD = (props: InputMdProps) => {\n  const { allowFilteredHtml, ...other } = props;\n\n  return (\n    <InputWrapper>\n      {allowFilteredHtml && (\n        <p>\n          You can input markdown or html (start with &lt; to indicate html) for\n          styling the text.\n        </p>\n      )}\n      <Input type=\"textarea\" {...other} />\n    </InputWrapper>\n  );\n};\n\nexport default React.memo(InputTabMD);\n","import * as React from 'react';\nimport { default as ReactMarkdown } from 'react-markdown';\nimport { filterXSS as xss, getDefaultWhiteList } from 'xss';\n\nexport interface FilterInput {\n  value: string;\n  whiteList?: { [propName: string]: string[] };\n}\n\nexport interface Props extends FilterInput {\n  allowFilteredHtml?: boolean;\n}\n\nexport default class FormattedText extends React.PureComponent<Props> {\n  static filterXss({\n    value,\n    whiteList = {\n      source: ['src', 'type'],\n      img: ['src', 'alt', 'title', 'width', 'height', 'style'],\n      video: [\n        'autoplay',\n        'controls',\n        'loop',\n        'preload',\n        'src',\n        'height',\n        'width',\n        'style',\n      ],\n    },\n  }: FilterInput): string {\n    const options = {\n      whiteList: {\n        ...getDefaultWhiteList(),\n        ...whiteList,\n      },\n      stripIgnoreTagBody: ['script'], // the script tag is a special case, we need\n      // to filter out its content\n    };\n    return xss(value, options);\n  }\n\n  render() {\n    const { value, allowFilteredHtml = false, whiteList } = this.props;\n\n    if (typeof value !== 'string') return null;\n\n    if (allowFilteredHtml && value.indexOf('<') === 0) {\n      const filteredContent = FormattedText.filterXss({ value, whiteList });\n      return <div dangerouslySetInnerHTML={{ __html: filteredContent }} />;\n    }\n\n    return <ReactMarkdown source={value} escapeHtml={false} />;\n  }\n}\n","import * as React from 'react';\nimport InputWrapper from './InputWrapper';\nimport { default as FormattedText } from '../FormattedText';\nimport { InputProps } from 'reactstrap';\n\nexport interface PreviewProps extends Pick<InputProps, 'value'> {\n  allowFilteredHtml: boolean | undefined;\n  skipRender: boolean;\n}\n\nconst PreviewTabMD = (props: PreviewProps) => {\n  const { allowFilteredHtml, value } = props;\n  if (typeof value !== 'string') {\n    return <InputWrapper>-</InputWrapper>;\n  }\n\n  return (\n    <InputWrapper>\n      <FormattedText value={value} allowFilteredHtml={allowFilteredHtml} />\n    </InputWrapper>\n  );\n};\n\nexport default React.memo(\n  PreviewTabMD,\n  (prevProps: PreviewProps, newProps: PreviewProps) => {\n    if (newProps.skipRender) return false;\n\n    const { value, allowFilteredHtml } = prevProps;\n    if (\n      newProps.value !== value ||\n      newProps.allowFilteredHtml !== allowFilteredHtml\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n);\n","import * as React from 'react';\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n  InputProps,\n} from 'reactstrap';\nimport InputTab from './InputTab';\nimport PreviewTab from './PreviewTab';\nimport { default as FormattedText } from '../FormattedText';\n\nexport interface State {\n  showEdit: boolean;\n}\n\nexport interface TextareaProps extends InputProps {\n  allowFilteredHtml?: boolean;\n  toggle?: boolean;\n  whiteList?: { [propName: string]: string[] };\n  filteredValue?: React.MutableRefObject<string | undefined>;\n}\n\nconst MdTextarea = (props: TextareaProps) => {\n  const {\n    id = 'unknown_markdown_id',\n    value,\n    toggle,\n    allowFilteredHtml = false,\n    rows,\n    cols,\n    onChange,\n    onFocus,\n    onBlur,\n    valid,\n    invalid,\n    bsSize,\n    name,\n    autoFocus,\n    disabled,\n    maxLength,\n    readOnly,\n    required,\n    wrap,\n    whiteList,\n    filteredValue,\n  } = props;\n  const [showEdit, setShowEdit] = React.useState(true);\n  const onEditClick = React.useCallback(() => {\n    if (toggle) {\n      setShowEdit(!showEdit);\n    } else {\n      setShowEdit(true);\n    }\n  }, [showEdit]);\n  const onPreviewClick = React.useCallback(() => {\n    if (toggle) {\n      setShowEdit(!showEdit);\n    } else {\n      setShowEdit(false);\n    }\n  }, [showEdit]);\n\n  React.useEffect(() => {\n    if (!filteredValue) {\n      return;\n    }\n\n    if (typeof value !== 'string') {\n      filteredValue.current = undefined;\n      return;\n    }\n\n    filteredValue.current = FormattedText.filterXss({ value, whiteList });\n  }, [value, whiteList]);\n\n  return (\n    <>\n      <Nav tabs={true} key=\"Nav\">\n        <NavItem>\n          <NavLink active={showEdit} onClick={onEditClick}>\n            Edit\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={!showEdit} onClick={onPreviewClick}>\n            Preview\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent\n        key=\"Content\"\n        id={`tabpane_${id}`}\n        activeTab={showEdit ? 'Edit' : 'Preview'}\n      >\n        <TabPane tabId=\"Edit\">\n          <InputTab\n            allowFilteredHtml={allowFilteredHtml}\n            value={value}\n            rows={rows}\n            cols={cols}\n            {...{ onChange, onFocus, onBlur }}\n            {...{ valid, name, invalid, bsSize }}\n            {...{ autoFocus, disabled, maxLength, readOnly, required, wrap }}\n          />\n        </TabPane>\n        <TabPane tabId=\"Preview\">\n          <PreviewTab\n            allowFilteredHtml={allowFilteredHtml}\n            value={value}\n            skipRender={!showEdit}\n          />\n        </TabPane>\n      </TabContent>\n    </>\n  );\n};\n\nexport default React.memo(MdTextarea);\n"],"names":["React.createElement","React.memo","Input","__extends","getDefaultWhiteList","xss","React.PureComponent","React.useState","React.useCallback","React.useEffect","Nav","NavItem","NavLink","TabContent","TabPane"],"mappings":"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"}