{"version":3,"file":"textarea.js","sources":["../src/Textarea/InputWrapper.tsx","../src/Textarea/InputTab.tsx","../src/FormattedText.tsx","../src/Textarea/PreviewTab.tsx","../src/Textarea/index.tsx"],"sourcesContent":["// @ts-ignore\nimport * as React from 'react';\n\nexport interface Props {\n  style?: { [propName: string]: string };\n  children: React.ReactNode;\n}\n\nconst wrapper = ({ children, style = {} }: Props) => (\n  <div\n    style={{\n      border: '1px solid #ddd',\n      borderTop: '0px',\n      borderRadius: '5px',\n      borderTopLeftRadius: '0px',\n      borderTopRightRadius: '0px',\n      padding: '10px',\n      backgroundColor: '#fff',\n      textAlign: 'left',\n      ...style,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default wrapper;\n","import * as React from 'react';\nimport { Input } from 'reactstrap';\nimport InputWrapper from './InputWrapper';\n\nexport interface Props {\n  allowFilteredHtml: boolean;\n  value: string;\n  name?: string;\n  valid?: boolean;\n  invalid?: boolean;\n  rows?: number;\n  cols?: number;\n  bsSize?: 'lg' | 'sm';\n  disabled?: boolean;\n  autoFocus?: boolean;\n  maxLength?: number;\n  readOnly?: boolean;\n  required?: boolean;\n  wrap?: 'hard' | 'soft';\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nexport default class InputTabMD extends React.PureComponent<Props> {\n  render() {\n    const { allowFilteredHtml, ...other } = this.props;\n\n    return (\n      <InputWrapper>\n        {allowFilteredHtml &&\n          <p>\n            You can input markdown or html (start with &lt; to indicate html)\n            for styling the text.\n              </p>\n        }\n        <Input\n          type=\"textarea\"\n          {...other}\n        />\n      </InputWrapper>\n    );\n  }\n}","import * as React from 'react';\nimport { default as ReactMarkdown } from 'react-markdown';\nimport { default as xss } from 'xss';\n\nexport interface FilterInput {\n  value: string;\n  whiteList?: { [propName: string]: string[] };\n}\n\nexport interface Props extends FilterInput {\n  allowFilteredHtml?: boolean;\n}\n\nexport default class FormattedText extends React.PureComponent<Props> {\n  static filterXss({ value, whiteList = {\n    source: ['src', 'type'],\n    img: ['src', 'alt', 'title', 'width', 'height', 'style'],\n    video: [\n      'autoplay', 'controls', 'loop',\n      'preload', 'src', 'height',\n      'width', 'style',\n    ],\n  }}: FilterInput): string {\n    const options = {\n      whiteList: {\n        ...xss.getDefaultWhiteList(),\n        ...whiteList,\n      },\n      stripIgnoreTagBody: ['script'], // the script tag is a special case, we need\n      // to filter out its content\n    };\n    return xss(value, options);\n  }\n\n  render() {\n    const {\n      value,\n      allowFilteredHtml = false,\n      whiteList,\n    } = this.props;\n\n    if (typeof value !== 'string') return null;\n\n    if (allowFilteredHtml && value.indexOf('<') === 0) {\n      const filteredContent = FormattedText.filterXss({ value, whiteList });\n      return (<div dangerouslySetInnerHTML={{ __html: filteredContent }} />);\n    }\n\n    return (\n      <ReactMarkdown\n        source={value}\n        escapeHtml={false}\n      />);\n  }\n}\n","import * as React from 'react';\nimport InputWrapper from './InputWrapper';\nimport { default as FormattedText } from '../FormattedText';\n\nexport interface Props {\n  allowFilteredHtml: boolean;\n  value: string;\n  skipRender: boolean;\n}\n\nexport default class PreviewTabMD extends React.Component<Props> {\n  shouldComponentUpdate(newProps: Props) {\n    if (newProps.skipRender) return false;\n\n    const { value, allowFilteredHtml } = this.props;\n    if (\n      newProps.value !== value ||\n      newProps.allowFilteredHtml !== allowFilteredHtml\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const { allowFilteredHtml, value } = this.props;\n\n    return (\n      <InputWrapper>\n        <FormattedText\n          value={value}\n          allowFilteredHtml={allowFilteredHtml}\n        />\n      </InputWrapper>);\n  }\n}","import * as React from 'react';\nimport {\n  Nav, NavItem, NavLink,\n  TabContent,\n  TabPane,\n} from 'reactstrap';\nimport InputTab, { Props as InputProps } from './InputTab';\nimport PreviewTab from './PreviewTab';\nimport { default as FormattedText } from '../FormattedText';\n\nexport interface State {\n  showEdit: boolean;\n}\n\nexport interface Props extends InputProps {\n  id: string;\n  value: string;\n  allowFilteredHtml: boolean;\n  toggle?: boolean;\n  whiteList?: { [propName: string]: string[] };\n}\n\nclass MdTextarea extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    allowFilteredHtml: false,\n    id: 'unknown_markdown_id',\n  };\n\n  state = {\n    showEdit: true,\n  };\n\n  toggle(show: boolean = !this.state.showEdit) {\n    this.setState({ showEdit: show });\n  }\n\n  handleToggle = () => this.toggle();\n  activateEdit = () => this.toggle(true);\n  deActivateEdit = () => this.toggle(false);\n\n  render() {\n    const {\n      id, value, toggle, allowFilteredHtml,\n      rows, cols, onChange, onFocus, onBlur,\n      valid, invalid, bsSize, name,\n      autoFocus, disabled, maxLength, readOnly, required, wrap,\n    } = this.props;\n    const { showEdit } = this.state;\n\n    return (\n      <React.Fragment>\n        <Nav tabs={true} key=\"Nav\">\n          <NavItem>\n            <NavLink\n              active={showEdit}\n              onClick={toggle ? this.handleToggle : this.activateEdit}\n            >\n              Edit\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              active={!showEdit}\n              onClick={toggle ? this.handleToggle : this.deActivateEdit}\n            >\n              Preview\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent\n          key=\"Content\"\n          id={`tabpane_${id}`}\n          activeTab={showEdit ? 'Edit' : 'Preview'}\n        >\n          <TabPane tabId=\"Edit\">\n            <InputTab\n              allowFilteredHtml={allowFilteredHtml}\n              value={value}\n              rows={rows}\n              cols={cols}\n              {...{ onChange, onFocus, onBlur }}\n              {...{ valid, name, invalid, bsSize }}\n              {...{ autoFocus, disabled, maxLength, readOnly, required, wrap }}\n            />\n          </TabPane>\n          <TabPane tabId=\"Preview\">\n            <PreviewTab\n              allowFilteredHtml={allowFilteredHtml}\n              value={value}\n              skipRender={!showEdit}\n            />\n          </TabPane>\n        </TabContent>\n      </React.Fragment>\n    );\n  }\n\n  getFilteredValue() {\n    const { value, whiteList } = this.props;\n    return FormattedText.filterXss({ value, whiteList });\n  }\n}\n\nexport default MdTextarea;\n"],"names":["React.createElement","tslib_1.__extends","InputWrapper","Input","React.PureComponent","React.Component","React.Fragment","Nav","NavItem","NavLink","TabContent","TabPane","InputTab","PreviewTab"],"mappings":";;;;;;;;;;;;AAQA,IAAM,OAAO,GAAG,UAAC,EAA+B;QAA7B,sBAAQ,EAAE,aAAU,EAAV,+BAAU;IAAc,QACnDA,6BACE,KAAK,qBACH,MAAM,EAAE,gBAAgB,EACxB,SAAS,EAAE,KAAK,EAChB,YAAY,EAAE,KAAK,EACnB,mBAAmB,EAAE,KAAK,EAC1B,oBAAoB,EAAE,KAAK,EAC3B,OAAO,EAAE,MAAM,EACf,eAAe,EAAE,MAAM,EACvB,SAAS,EAAE,MAAM,IACd,KAAK,KAGT,QAAQ,CACL;CACP,CAAC;;ACAF;IAAwCC,sCAA0B;IAAlE;;KAmBC;IAlBC,2BAAM,GAAN;QACE,IAAM,eAA4C,EAA1C,wCAAiB,EAAE,iDAAuB,CAAC;QAEnD,QACED,oBAACE,OAAY;YACV,iBAAiB;gBAChBF,sHAGQ;YAEVA,oBAACG,gBAAK,qBACJ,IAAI,EAAC,UAAU,IACX,KAAK,EACT,CACW,EACf;KACH;IACH,iBAAC;CAAA,CAnBuCC,mBAAmB,GAmB1D;;AC9BD;IAA2CH,yCAA0B;IAArE;;KAyCC;IAxCQ,uBAAS,GAAhB,UAAiB,EAQF;YARI,gBAAK,EAAE,iBAQzB,EARyB;;;;;;;;cAQzB;QACC,IAAM,OAAO,GAAG;YACd,SAAS,uBACJ,GAAG,CAAC,mBAAmB,EAAE,EACzB,SAAS,CACb;YACD,kBAAkB,EAAE,CAAC,QAAQ,CAAC;SAE/B,CAAC;QACF,OAAO,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC5B;IAED,8BAAM,GAAN;QACQ,IAAA,eAIQ,EAHZ,gBAAK,EACL,yBAAyB,EAAzB,8CAAyB,EACzB,wBAAS,CACI;QAEf,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,OAAO,IAAI,CAAC;QAE3C,IAAI,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACjD,IAAM,eAAe,GAAG,aAAa,CAAC,SAAS,CAAC,EAAE,KAAK,OAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;YACtE,QAAQD,6BAAK,uBAAuB,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,GAAI,EAAE;SACxE;QAED,QACEA,oBAAC,aAAa,IACZ,MAAM,EAAE,KAAK,EACb,UAAU,EAAE,KAAK,GACjB,EAAE;KACP;IACH,oBAAC;CAAA,CAzC0CI,mBAAmB,GAyC7D;;AC5CD;IAA0CH,wCAAsB;IAAhE;;KA0BC;IAzBC,4CAAqB,GAArB,UAAsB,QAAe;QACnC,IAAI,QAAQ,CAAC,UAAU;YAAE,OAAO,KAAK,CAAC;QAEhC,IAAA,eAAyC,EAAvC,gBAAK,EAAE,wCAAiB,CAAgB;QAChD,IACE,QAAQ,CAAC,KAAK,KAAK,KAAK;YACxB,QAAQ,CAAC,iBAAiB,KAAK,iBAAiB,EAChD;YACA,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;IAED,6BAAM,GAAN;QACQ,IAAA,eAAyC,EAAvC,wCAAiB,EAAE,gBAAK,CAAgB;QAEhD,QACED,oBAACE,OAAY;YACXF,oBAAC,aAAa,IACZ,KAAK,EAAE,KAAK,EACZ,iBAAiB,EAAE,iBAAiB,GACpC,CACW,EAAE;KACpB;IACH,mBAAC;CAAA,CA1ByCK,eAAe,GA0BxD;;ACdD;IAAyBJ,sCAAiC;IAA1D;QAAA,qEA+EC;QAzEC,WAAK,GAAG;YACN,QAAQ,EAAE,IAAI;SACf,CAAC;QAMF,kBAAY,GAAG,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,GAAA,CAAC;QACnC,kBAAY,GAAG,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAA,CAAC;QACvC,oBAAc,GAAG,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAA,CAAC;;KA+D3C;IArEC,2BAAM,GAAN,UAAO,IAAoC;QAApC,qBAAA,EAAA,QAAiB,IAAI,CAAC,KAAK,CAAC,QAAQ;QACzC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;KACnC;IAMD,2BAAM,GAAN;QACQ,IAAA,eAKQ,EAJZ,UAAE,EAAE,gBAAK,EAAE,kBAAM,EAAE,wCAAiB,EACpC,cAAI,EAAE,cAAI,EAAE,sBAAQ,EAAE,oBAAO,EAAE,kBAAM,EACrC,gBAAK,EAAE,oBAAO,EAAE,kBAAM,EAAE,cAAI,EAC5B,wBAAS,EAAE,sBAAQ,EAAE,wBAAS,EAAE,sBAAQ,EAAE,sBAAQ,EAAE,cAAI,CAC3C;QACP,IAAA,8BAAQ,CAAgB;QAEhC,QACED,oBAACM,cAAc;YACbN,oBAACO,cAAG,IAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC,KAAK;gBACxBP,oBAACQ,kBAAO;oBACNR,oBAACS,kBAAO,IACN,MAAM,EAAE,QAAQ,EAChB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,WAG/C,CACF;gBACVT,oBAACQ,kBAAO;oBACNR,oBAACS,kBAAO,IACN,MAAM,EAAE,CAAC,QAAQ,EACjB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,cAGjD,CACF,CACN;YACNT,oBAACU,qBAAU,IACT,GAAG,EAAC,SAAS,EACb,EAAE,EAAE,aAAW,EAAI,EACnB,SAAS,EAAE,QAAQ,GAAG,MAAM,GAAG,SAAS;gBAExCV,oBAACW,kBAAO,IAAC,KAAK,EAAC,MAAM;oBACnBX,oBAACY,UAAQ,qBACP,iBAAiB,EAAE,iBAAiB,EACpC,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,IACN,EAAE,QAAQ,UAAA,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,EAC7B,EAAE,KAAK,OAAA,EAAE,IAAI,MAAA,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,EAChC,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAE,IAAI,MAAA,EAAE,EAChE,CACM;gBACVZ,oBAACW,kBAAO,IAAC,KAAK,EAAC,SAAS;oBACtBX,oBAACa,YAAU,IACT,iBAAiB,EAAE,iBAAiB,EACpC,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,CAAC,QAAQ,GACrB,CACM,CACC,CACE,EACjB;KACH;IAED,qCAAgB,GAAhB;QACQ,IAAA,eAAiC,EAA/B,gBAAK,EAAE,wBAAS,CAAgB;QACxC,OAAO,aAAa,CAAC,SAAS,CAAC,EAAE,KAAK,OAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;KACtD;IA7EM,uBAAY,GAAG;QACpB,iBAAiB,EAAE,KAAK;QACxB,EAAE,EAAE,qBAAqB;KAC1B,CAAC;IA2EJ,iBAAC;CA/ED,CAAyBT,mBAAmB,GA+E3C;;;;;"}